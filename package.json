{
  "version": "1.2.1",
  "name": "vdm-vscode",
  "displayName": "VDM VSCode",
  "description": "Support for the VDM modelling languages: VDM-SL, VDM++ and VDM-RT",
  "icon": "resources/icons/Overture.png",
  "keywords": [
    "Vienna Development Method",
    "vdm",
    "VDM",
    "vdmsl",
    "VDM-SL",
    "vdmpp",
    "VDM++",
    "vdmrt",
    "VDM-RT",
    "multi-root ready"
  ],
  "author": "Jonas K. Rask and Frederik P. Madsen",
  "license": "GPL-3.0-or-later",
  "repository": {
    "type": "git",
    "url": "https://github.com/jonaskrask/vdm-vscode"
  },
  "publisher": "jonaskrask",
  "engines": {
    "vscode": "^1.49.0"
  },
  "categories": [
    "Programming Languages",
    "Debuggers",
    "Linters"
  ],
  "activationEvents": [
    "onLanguage:vdmsl",
    "onLanguage:vdmpp",
    "onLanguage:vdmrt",
    "workspaceContains:*.vdmsl",
    "workspaceContains:*.vdmpp",
    "workspaceContains:*.vdmrt",
    "onCommand:vdm-vscode.importExample"
  ],
  "main": "./dist/extension",
  "contributes": {
    "commands": [
      {
        "command": "vdm-vscode.addRunConfiguration",
        "title": "Add VDM Run Configuration",
        "category": "VDM",
        "icon": "$(library)"
      },
      {
        "command": "vdm-vscode.addLibrary",
        "title": "Add VDM Library",
        "category": "VDM",
        "icon": "$(library)"
      },
      {
        "command": "vdm-vscode.javaCodeGen",
        "title": "Generate Java Code",
        "category": "VDM",
        "icon": "$(codegen)"
      },
      {
        "command": "vdm-vscode.importExample",
        "title": "Import VDM Example",
        "category": "VDM",
        "icon": "$(example)"
      },
      {
        "command": "vdm-vscode.translateLatex",
        "title": "Translate to LaTeX",
        "category": "VDM",
        "icon": "$(references)"
      },
      {
        "command": "vdm-vscode.translateWord",
        "title": "Translate to Word",
        "category": "VDM",
        "icon": "$(references)"
      },
      {
        "command": "vdm-vscode.translateCov",
        "title": "Generate Coverage",
        "category": "VDM",
        "icon": "$(references)"
      },
      {
        "command": "vdm-vscode.translateGraphviz",
        "title": "Generate Dependency Graph",
        "category": "VDM",
        "icon": "$(references)"
      },
      {
        "command": "vdm-vscode.runPOG",
        "title": "Run Proof Obligation Generation",
        "category": "VDM",
        "icon": "$(run)"
      },
      {
        "command": "vdm-vscode.goToTrace",
        "title": "Go to trace",
        "category": "VDM",
        "icon": "$(go-to-file)"
      },
      {
        "command": "vdm-vscode.ctSetFilter",
        "title": "Set Filter Options",
        "category": "VDM",
        "icon": "$(gear)"
      },
      {
        "command": "vdm-vscode.ctRebuildOutline",
        "title": "Rebuild Trace Outline",
        "category": "VDM",
        "icon": "$(refresh)"
      },
      {
        "command": "vdm-vscode.ctFullExecute",
        "title": "Execute All Tests",
        "category": "VDM",
        "icon": "$(run-all)"
      },
      {
        "command": "vdm-vscode.ctExecute",
        "title": "Full Evaluation",
        "category": "VDM",
        "icon": "$(run)"
      },
      {
        "command": "vdm-vscode.ctFilteredExecute",
        "title": "Filtered Evaluation",
        "category": "VDM",
        "icon": {
          "light": "/resources/icons/light/runFiltered.svg",
          "dark": "/resources/icons/dark/runFiltered.svg"
        }
      },
      {
        "command": "vdm-vscode.ctGenerate",
        "title": "Generate Tests",
        "category": "VDM",
        "icon": "$(refresh)"
      },
      {
        "command": "vdm-vscode.ctEnableTreeFilter",
        "title": "Show only failed tests",
        "category": "VDM",
        "icon": "$(filter)"
      },
      {
        "command": "vdm-vscode.ctDisableTreeFilter",
        "title": "Disable filtering of tests",
        "category": "VDM",
        "icon": {
          "light": "/resources/icons/light/disableFilter.svg",
          "dark": "/resources/icons/dark/disableFilter.svg"
        }
      },
      {
        "command": "vdm-vscode.ctSendToInterpreter",
        "title": "Send test to interpreter",
        "category": "VDM",
        "icon": "$(debug-alt)"
      },
      {
        "command": "vdm-vscode.ctCancel",
        "title": "Cancel Combinatorial Test Request",
        "category": "VDM",
        "icon": "$(debug-stop)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "combinatorialTesting",
          "title": "Combinatorial Testing",
          "icon": "resources/icons/ctView.svg",
          "when": "vdm-ct-show-view == true"
        }
      ]
    },
    "views": {
      "combinatorialTesting": [
        {
          "id": "vdm-ctView",
          "name": "Tests",
          "when": "vdm-ct-show-view == true"
        },
        {
          "id": "vdm-ctResultView",
          "name": "Test Sequence Results",
          "when": "vdm-ct-show-view == true"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "explorer",
        "contents": "You can also import a VDM example by clicking the button below.\n[Import VDM example](command:vdm-vscode.importExample)",
        "when": "workspaceFolderCount == 0"
      },
      {
        "view": "vdm-ctView",
        "contents": "[Generate test outline](command:vdm-vscode.ctRebuildOutline)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "vdm-vscode.ctFullExecute",
          "when": "view =~ /vdm-ctView/ && vdm-ct-show-run-buttons == true",
          "group": "navigation@0"
        },
        {
          "command": "vdm-vscode.ctCancel",
          "when": "view =~ /vdm-ctView/ && vdm-ct-show-cancel-button == true",
          "group": "navigation@1"
        },
        {
          "command": "vdm-vscode.ctSetFilter",
          "when": "view =~ /vdm-ctView/ && vdm-ct-show-set-execute-filter-button == true",
          "group": "navigation@2"
        },
        {
          "command": "vdm-vscode.ctEnableTreeFilter",
          "when": "view =~ /vdm-ctView/ && vdm-ct-show-enable-filter-button == true",
          "group": "navigation@3"
        },
        {
          "command": "vdm-vscode.ctDisableTreeFilter",
          "when": "view =~ /vdm-ctView/ && vdm-ct-show-disable-filter-button == true",
          "group": "navigation@3"
        },
        {
          "command": "vdm-vscode.ctRebuildOutline",
          "when": "view =~ /vdm-ctView/",
          "group": "navigation@4"
        }
      ],
      "view/item/context": [
        {
          "command": "vdm-vscode.ctExecute",
          "when": "viewItem == trace && vdm-ct-show-run-buttons == true || viewItem == testgroup && vdm-ct-show-run-buttons == true",
          "group": "vdm-ctView@0"
        },
        {
          "command": "vdm-vscode.ctFilteredExecute",
          "when": "viewItem == trace && vdm-ct-show-run-buttons == true",
          "group": "vdm-ctView@1"
        },
        {
          "command": "vdm-vscode.ctGenerate",
          "when": "viewItem == trace",
          "group": "vdm-ctView@2"
        },
        {
          "command": "vdm-vscode.ctSendToInterpreter",
          "when": "viewItem == test && vdm-ct-show-run-buttons == true",
          "group": "vdm-ctView@0"
        },
        {
          "command": "vdm-vscode.ctExecute",
          "when": "viewItem == trace && vdm-ct-show-run-buttons == true || viewItem == testgroup && vdm-ct-show-run-buttons == true",
          "group": "inline@0"
        },
        {
          "command": "vdm-vscode.ctFilteredExecute",
          "when": "viewItem == trace && vdm-ct-show-run-buttons == true",
          "group": "inline@1"
        },
        {
          "command": "vdm-vscode.ctGenerate",
          "when": "viewItem == trace",
          "group": "inline@2"
        },
        {
          "command": "vdm-vscode.goToTrace",
          "when": "viewItem == trace",
          "group": "inline@3"
        },
        {
          "command": "vdm-vscode.ctSendToInterpreter",
          "when": "viewItem == test && vdm-ct-show-run-buttons == true",
          "group": "inline@0"
        }
      ],
      "explorer/context": [
        {
          "command": "vdm-vscode.runPOG",
          "when": "resourceScheme == file && pog-show-button == true || resourceScheme == folder && pog-show-button == true",
          "group": "verification@1"
        },
        {
          "command": "vdm-vscode.translateLatex",
          "when": "resourceLangId == vdmsl && tr-latex-show-button == true || resourceLangId == vdmpp && tr-latex-show-button == true || resourceLangId == vdmrt && tr-latex-show-button == true",
          "group": "translate@1"
        },
        {
          "command": "vdm-vscode.translateWord",
          "when": "resourceLangId == vdmsl && tr-word-show-button == true || resourceLangId == vdmpp && tr-word-show-button == true || resourceLangId == vdmrt && tr-word-show-button == true",
          "group": "translate@2"
        },
        {
          "command": "vdm-vscode.translateCov",
          "when": "resourceLangId == vdmsl && tr-coverage-show-button == true || resourceLangId == vdmpp && tr-coverage-show-button == true || resourceLangId == vdmrt && tr-coverage-show-button == true",
          "group": "translate@3"
        },
        {
          "command": "vdm-vscode.javaCodeGen",
          "when": "resourceLangId == vdmsl && jcg-show-button == true || resourceLangId == vdmpp && jcg-show-button == true || resourceLangId == vdmrt ",
          "group": "translate@4"
        },
        {
          "command": "vdm-vscode.translateGraphviz",
          "when": "resourceLangId == vdmsl && tr-dependencies-show-button == true || resourceLangId == vdmpp && tr-dependencies-show-button == true || resourceLangId == vdmrt && tr-dependencies-show-button == true",
          "group": "translate@5"
        },
        {
          "command": "vdm-vscode.addLibrary",
          "when": "resourceScheme == file && add-lib-show-button == true || resourceScheme == folder && add-lib-show-button == true",
          "group": "vdm@1"
        },
        {
          "command": "vdm-vscode.addRunConfiguration",
          "when": "resourceScheme == file && add-runconf-show-button == true || resourceScheme == folder && add-runconf-show-button == true",
          "group": "vdm@2"
        },
        {
          "command": "vdm-vscode.importExample",
          "group": "2_workspace@100"
        }
      ],
      "editor/context": [
        {
          "command": "vdm-vscode.runPOG",
          "when": "resourceLangId == vdmsl && pog-show-button == true || resourceLangId == vdmpp && pog-show-button == true || resourceLangId == vdmrt && pog-show-button == true",
          "group": "verification@1"
        },
        {
          "command": "vdm-vscode.translateLatex",
          "when": "resourceLangId == vdmsl && tr-latex-show-button == true || resourceLangId == vdmpp && tr-latex-show-button == true || resourceLangId == vdmrt && tr-latex-show-button == true",
          "group": "translate@1"
        },
        {
          "command": "vdm-vscode.translateWord",
          "when": "resourceLangId == vdmsl && tr-word-show-button == true || resourceLangId == vdmpp && tr-word-show-button == true || resourceLangId == vdmrt && tr-word-show-button == true",
          "group": "translate@2"
        },
        {
          "command": "vdm-vscode.translateCov",
          "when": "resourceLangId == vdmsl && tr-coverage-show-button == true || resourceLangId == vdmpp && tr-coverage-show-button == true || resourceLangId == vdmrt && tr-coverage-show-button == true",
          "group": "translate@3"
        },
        {
          "command": "vdm-vscode.javaCodeGen",
          "when": "resourceLangId == vdmsl && jcg-show-button == true || resourceLangId == vdmpp && jcg-show-button == true || resourceLangId == vdmrt && jcg-show-button == true",
          "group": "translate@4"
        },
        {
          "command": "vdm-vscode.translateGraphviz",
          "when": "resourceLangId == vdmsl && tr-dependencies-show-button == true || resourceLangId == vdmpp && tr-dependencies-show-button == true || resourceLangId == vdmrt && tr-dependencies-show-button == true",
          "group": "translate@5"
        },
        {
          "command": "vdm-vscode.addLibrary",
          "when": "resourceLangId == vdmsl && add-lib-show-button == true || resourceLangId == vdmpp && add-lib-show-button == true || resourceLangId == vdmrt && add-lib-show-button == true",
          "group": "vdm@1"
        },
        {
          "command": "vdm-vscode.addRunConfiguration",
          "when": "resourceLangId == vdmsl && add-runconf-show-button == true || resourceLangId == vdmpp && add-runconf-show-button == true || resourceLangId == vdmrt && add-runconf-show-button == true",
          "group": "vdm@2"
        }
      ],
      "commandPalette": [
        {
          "command": "vdm-vscode.runPOG",
          "when": "false"
        },
        {
          "command": "vdm-vscode.ctSetFilter",
          "when": "false"
        },
        {
          "command": "vdm-vscode.ctRebuildOutline",
          "when": "false"
        },
        {
          "command": "vdm-vscode.ctFullExecute",
          "when": "false"
        },
        {
          "command": "vdm-vscode.ctExecute",
          "when": "false"
        },
        {
          "command": "vdm-vscode.ctFilteredExecute",
          "when": "false"
        },
        {
          "command": "vdm-vscode.ctGenerate",
          "when": "false"
        },
        {
          "command": "vdm-vscode.ctEnableTreeFilter",
          "when": "false"
        },
        {
          "command": "vdm-vscode.ctDisableTreeFilter",
          "when": "false"
        },
        {
          "command": "vdm-vscode.ctSendToInterpreter",
          "when": "false"
        },
        {
          "command": "vdm-vscode.goToTrace",
          "when": "false"
        },
        {
          "command": "vdm-vscode.translateLatex",
          "when": "false"
        },
        {
          "command": "vdm-vscode.translateWord",
          "when": "false"
        },
        {
          "command": "vdm-vscode.translateCov",
          "when": "false"
        },
        {
          "command": "vdm-vscode.translateGraphviz",
          "when": "false"
        },
        {
          "command": "vdm-vscode.addLibrary",
          "when": "false"
        },
        {
          "command": "vdm-vscode.addRunConfiguration",
          "when": "false"
        },
        {
          "command": "vdm-vscode.javaCodeGen",
          "when": "false"
        }
      ]
    },
    "configuration": {
      "title": "VDM VSCode",
      "properties": {
        "vdm-vscode.debug.experimentalServer": {
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "description": "Use experimental server. True if client should not launch server, but connect to a server on socket connections."
        },
        "vdm-vscode.debug.lspPort": {
          "title": "LSP Port",
          "type": "integer",
          "default": 8000,
          "scope": "resource",
          "markdownDescription": "Port used for LSP. NOTE: Only used when `#vdm-vscode.debug.experimentalServer#` is active."
        },
        "vdm-vscode.debug.dapPort": {
          "title": "DAP Port",
          "type": "integer",
          "default": 8001,
          "scope": "resource",
          "markdownDescription": "Port used for DAP. NOTE: Only used when `#vdm-vscode.debug.experimentalServer#` is active."
        },
        "vdm-vscode.debug.activateServerLog": {
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "description": "Activate logging of server actions and protocol communication."
        },
        "vdm-vscode.JVMArguments": {
          "type": "string",
          "default": "",
          "scope": "resource",
          "description": "JVM arguments used when launching the server."
        },
        "vdm-vscode.annotationPaths": {
          "type": "string",
          "default": "",
          "scope": "resource",
          "description": "Comma separated list of folder and/or jar file paths for annotations that should be used with the language server."
        },
        "vdm-vscode.highPrecision": {
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "description": "Use high precision variant of VDMJ."
        },
        "vdm-vscode.stdio.activateStdoutLogging": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "Activate logging of stdout/stderr to terminal window. NOTE: This may cause performance slowdown if specifications have many annotations."
        },
        "vdm-vscode.stdio.stdioLogPath": {
          "type": "string",
          "default": "",
          "scope": "resource",
          "description": "File path for directory that should be used to store stdout/stderr logs. NOTE: If empty, terminal logging is used instead of file logging. The setting is only used when `#vdm-vscode.stdio.activateStdoutLogging#` is active."
        }
      }
    },
    "languages": [
      {
        "id": "vdmsl",
        "aliases": [
          "VDM-SL",
          "vdmsl"
        ],
        "extensions": [
          ".vdmsl"
        ],
        "configuration": "./language-configuration.json"
      },
      {
        "id": "vdmpp",
        "aliases": [
          "VDM++",
          "vdmpp"
        ],
        "extensions": [
          ".vdmpp"
        ],
        "configuration": "./language-configuration.json"
      },
      {
        "id": "vdmrt",
        "aliases": [
          "VDM-RT",
          "vdmrt"
        ],
        "extensions": [
          ".vdmrt"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "vdmsl",
        "scopeName": "source.vdmsl",
        "path": "./syntaxes/vdmsl.tmLanguage.json"
      },
      {
        "language": "vdmpp",
        "scopeName": "source.vdmpp",
        "path": "./syntaxes/vdmpp.tmLanguage.json"
      },
      {
        "language": "vdmrt",
        "scopeName": "source.vdmrt",
        "path": "./syntaxes/vdmrt.tmLanguage.json"
      },
      {
        "scopeName": "source.vdm",
        "path": "./syntaxes/vdm.tmLanguage.json"
      },
      {
        "scopeName": "source.vdm.type",
        "path": "./syntaxes/vdm.type.tmLanguage.json"
      },
      {
        "scopeName": "source.vdm.number",
        "path": "./syntaxes/vdm.number.tmLanguage.json"
      },
      {
        "scopeName": "source.vdm.operators",
        "path": "./syntaxes/vdm.operators.tmLanguage.json"
      },
      {
        "scopeName": "source.vdm.statements",
        "path": "./syntaxes/vdm.statements.tmLanguage.json"
      }
    ],
    "debuggers": [
      {
        "type": "vdm",
        "label": "VDM Debug",
        "runtime": "node",
        "configurationAttributes": {
          "launch": {
            "required": [],
            "properties": {
              "noDebug": {
                "type": "boolean",
                "description": "Don't run debug mode.",
                "default": false
              },
              "defaultName": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Name of the default module or class.",
                "default": ""
              },
              "trace": {
                "type": "boolean",
                "description": "Enable logging of the Debug Adapter Protocol.",
                "default": true
              },
              "command": {
                "type": "string",
                "description": "Run single execution of command and terminate.",
                "default": ""
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "name": "VDM Debug: Console",
            "type": "vdm",
            "request": "launch",
            "noDebug": false,
            "defaultName": null
          }
        ],
        "configurationSnippets": [
          {
            "label": "VDM Debug: Console",
            "description": "A new configuration for 'debugging' a VDM project.",
            "body": {
              "name": "Launch VDM Debug Console",
              "type": "vdm",
              "request": "launch",
              "noDebug": false,
              "defaultName": null
            }
          },
          {
            "label": "VDM Debug: Entry Point (VDM-SL)",
            "description": "A new configuration for 'debugging' a VDM project.",
            "body": {
              "name": "Launch VDM Debug from Entry Point",
              "type": "vdm",
              "request": "launch",
              "noDebug": false,
              "defaultName": null,
              "command": "print ${1:Function/Operation}(${2:arguments})"
            }
          },
          {
            "label": "VDM Debug: Entry Point (VDM++/-RT)",
            "description": "A new configuration for 'debugging' a VDM project.",
            "body": {
              "name": "Launch VDM Debug from Entry Point",
              "type": "vdm",
              "request": "launch",
              "noDebug": false,
              "defaultName": null,
              "command": "print new ${1:Class}().${2:Function/Operation}(${3:arguments})"
            }
          }
        ]
      }
    ],
    "breakpoints": [
      {
        "language": "vdmsl"
      },
      {
        "language": "vdmpp"
      },
      {
        "language": "vdmrt"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile && webpack --mode production",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "webpack": "npm run compile && webpack --mode development",
    "webpack-dev": "webpack --mode development --watch",
    "test-compile": "tsc -p ./"
  },
  "devDependencies": {
    "@types/mocha": "^8.2.3",
    "@types/node": "^14.17.9",
    "@types/vscode": "^1.49.0",
    "mocha": "^8.4.0",
    "ts-loader": "^8.3.0",
    "typescript": "^4.3.5",
    "vscode-test": "^1.6.1",
    "webpack": "^5.49.0",
    "webpack-cli": "^4.7.2"
  },
  "dependencies": {
    "compile": "0.0.2",
    "fs-extra": "^9.1.0",
    "portfinder": "^1.0.26",
    "run": "^1.4.0",
    "vscode-languageclient": "^6.1.3"
  }
}
